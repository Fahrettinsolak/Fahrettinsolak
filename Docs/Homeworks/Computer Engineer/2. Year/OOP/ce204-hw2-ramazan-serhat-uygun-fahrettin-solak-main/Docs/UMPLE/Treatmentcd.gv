// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "Treatment" {
  rankdir="BT"
  node [ratio="auto" shape=record margin=0; href="javascript:Action.selectClass(&quot;\N&quot;);"];

  // Class: Patient
  "Patient" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Patient    </td></tr></table>>,
   tooltip="class Patient
"];

  // Class: Doctor
  "Doctor" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Doctor    </td></tr></table>>,
   tooltip="class Doctor
"];

  // Class: Examination
  "Examination" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Examination    </td></tr></table>>,
   tooltip="class Examination
"];

  // Class: Diagnosis
  "Diagnosis" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Diagnosis    </td></tr></table>>,
   tooltip="class Diagnosis
"];

  // Class: Prescription
  "Prescription" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Prescription    </td></tr></table>>,
   tooltip="class Prescription
"];

  // Class: Treatment
  "Treatment" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Treatment    </td></tr></table>>,
   tooltip="class Treatment
"];

  // Class: Therapy
  "Therapy" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Therapy    </td></tr></table>>,
   tooltip="class Therapy
"];
  "Therapy" -> "Treatment" [arrowhead="empty"; samehead="gen"];


  // Class: Surgery
  "Surgery" [shape=plaintext margin=0 label=<<table border="1" cellspacing="0" cellborder="0" cellpadding="10"><tr><td>    Surgery    </td></tr></table>>,
   tooltip="class Surgery
"];
  "Surgery" -> "Treatment" [arrowhead="empty"; samehead="gen"];


  // All associations
  "Patient" -> "Prescription" [dir="none", taillabel="1 ", headlabel="* ", tooltip="Patient 1  -- *  Prescription

A Prescription has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

A Patient has some Prescriptions. It can have none, and there is no upper bound defined.

When a Prescription is created, its Patient must be assigned.
When a Prescription is deleted, its Patient is not deleted and its list of Prescriptions is decreased.
When a Patient is deleted, its Prescriptions are not deleted. They are assigned to another Patient.
" headtooltip="Patient 1  -- *  Prescription

A Prescription has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

A Patient has some Prescriptions. It can have none, and there is no upper bound defined.

When a Prescription is created, its Patient must be assigned.
When a Prescription is deleted, its Patient is not deleted and its list of Prescriptions is decreased.
When a Patient is deleted, its Prescriptions are not deleted. They are assigned to another Patient.
" tailtooltip="Patient 1  -- *  Prescription

A Prescription has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

A Patient has some Prescriptions. It can have none, and there is no upper bound defined.

When a Prescription is created, its Patient must be assigned.
When a Prescription is deleted, its Patient is not deleted and its list of Prescriptions is decreased.
When a Patient is deleted, its Prescriptions are not deleted. They are assigned to another Patient.
" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Patient" -> "Treatment" [dir="none", taillabel="1 ", headlabel="* ", tooltip="Patient 1  -- *  Treatment

A Treatment has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

A Patient has some Treatments. It can have none, and there is no upper bound defined.

When a Treatment is created, its Patient must be assigned.
When a Treatment is deleted, its Patient is not deleted and its list of Treatments is decreased.
When a Patient is deleted, its Treatments are not deleted. They are assigned to another Patient.
" headtooltip="Patient 1  -- *  Treatment

A Treatment has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

A Patient has some Treatments. It can have none, and there is no upper bound defined.

When a Treatment is created, its Patient must be assigned.
When a Treatment is deleted, its Patient is not deleted and its list of Treatments is decreased.
When a Patient is deleted, its Treatments are not deleted. They are assigned to another Patient.
" tailtooltip="Patient 1  -- *  Treatment

A Treatment has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

A Patient has some Treatments. It can have none, and there is no upper bound defined.

When a Treatment is created, its Patient must be assigned.
When a Treatment is deleted, its Patient is not deleted and its list of Treatments is decreased.
When a Patient is deleted, its Treatments are not deleted. They are assigned to another Patient.
" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Doctor" -> "Patient" [dir="none", taillabel="* ", headlabel="* ", tooltip="Doctor *  -- *  Patient

A Patient has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Patients. It can have none, and there is no upper bound defined.

" headtooltip="Doctor *  -- *  Patient

A Patient has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Patients. It can have none, and there is no upper bound defined.

" tailtooltip="Doctor *  -- *  Patient

A Patient has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Patients. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Doctor" -> "Examination" [dir="none", taillabel="1 ", headlabel="* ", tooltip="Doctor 1  -- *  Examination

An Examination has A Doctor. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Doctor.

A Doctor has some Examinations. It can have none, and there is no upper bound defined.

When an Examination is created, its Doctor must be assigned.
When an Examination is deleted, its Doctor is not deleted and its list of Examinations is decreased.
When a Doctor is deleted, its Examinations are not deleted. They are assigned to another Doctor.
" headtooltip="Doctor 1  -- *  Examination

An Examination has A Doctor. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Doctor.

A Doctor has some Examinations. It can have none, and there is no upper bound defined.

When an Examination is created, its Doctor must be assigned.
When an Examination is deleted, its Doctor is not deleted and its list of Examinations is decreased.
When a Doctor is deleted, its Examinations are not deleted. They are assigned to another Doctor.
" tailtooltip="Doctor 1  -- *  Examination

An Examination has A Doctor. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Doctor.

A Doctor has some Examinations. It can have none, and there is no upper bound defined.

When an Examination is created, its Doctor must be assigned.
When an Examination is deleted, its Doctor is not deleted and its list of Examinations is decreased.
When a Doctor is deleted, its Examinations are not deleted. They are assigned to another Doctor.
" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Doctor" -> "Prescription" [dir="none", taillabel="* ", headlabel="* ", tooltip="Doctor *  -- *  Prescription

A Prescription has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Prescriptions. It can have none, and there is no upper bound defined.

" headtooltip="Doctor *  -- *  Prescription

A Prescription has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Prescriptions. It can have none, and there is no upper bound defined.

" tailtooltip="Doctor *  -- *  Prescription

A Prescription has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Prescriptions. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Doctor" -> "Treatment" [dir="none", taillabel="* ", headlabel="* ", tooltip="Doctor *  -- *  Treatment

A Treatment has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Treatments. It can have none, and there is no upper bound defined.

" headtooltip="Doctor *  -- *  Treatment

A Treatment has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Treatments. It can have none, and there is no upper bound defined.

" tailtooltip="Doctor *  -- *  Treatment

A Treatment has some Doctors. It can have none, and there is no upper bound defined.

A Doctor has some Treatments. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Examination" -> "Patient" [dir="none", taillabel="* ", headlabel="1 ", tooltip="Examination *  -- 1  Patient

A Patient has some Examinations. It can have none, and there is no upper bound defined.

An Examination has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

When an Examination is created, its Patient must be assigned.
When an Examination is deleted, its Patient is not deleted and its list of Examinations is decreased.
When a Patient is deleted, its Examinations are not deleted. They are assigned to another Patient.
" headtooltip="Examination *  -- 1  Patient

A Patient has some Examinations. It can have none, and there is no upper bound defined.

An Examination has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

When an Examination is created, its Patient must be assigned.
When an Examination is deleted, its Patient is not deleted and its list of Examinations is decreased.
When a Patient is deleted, its Examinations are not deleted. They are assigned to another Patient.
" tailtooltip="Examination *  -- 1  Patient

A Patient has some Examinations. It can have none, and there is no upper bound defined.

An Examination has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

When an Examination is created, its Patient must be assigned.
When an Examination is deleted, its Patient is not deleted and its list of Examinations is decreased.
When a Patient is deleted, its Examinations are not deleted. They are assigned to another Patient.
" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Diagnosis" -> "Patient" [dir="none", taillabel="* ", headlabel="1 ", tooltip="Diagnosis *  -- 1  Patient

A Patient has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

When a Diagnosis is created, its Patient must be assigned.
When a Diagnosis is deleted, its Patient is not deleted and its list of Diagnosiss is decreased.
When a Patient is deleted, its Diagnosiss are not deleted. They are assigned to another Patient.
" headtooltip="Diagnosis *  -- 1  Patient

A Patient has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

When a Diagnosis is created, its Patient must be assigned.
When a Diagnosis is deleted, its Patient is not deleted and its list of Diagnosiss is decreased.
When a Patient is deleted, its Diagnosiss are not deleted. They are assigned to another Patient.
" tailtooltip="Diagnosis *  -- 1  Patient

A Patient has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has A Patient. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Patient.

When a Diagnosis is created, its Patient must be assigned.
When a Diagnosis is deleted, its Patient is not deleted and its list of Diagnosiss is decreased.
When a Patient is deleted, its Diagnosiss are not deleted. They are assigned to another Patient.
" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Diagnosis" -> "Doctor" [dir="none", taillabel="* ", headlabel="* ", tooltip="Diagnosis *  -- *  Doctor

A Doctor has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Doctors. It can have none, and there is no upper bound defined.

" headtooltip="Diagnosis *  -- *  Doctor

A Doctor has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Doctors. It can have none, and there is no upper bound defined.

" tailtooltip="Diagnosis *  -- *  Doctor

A Doctor has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Doctors. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Diagnosis" -> "Examination" [dir="none", taillabel="* ", headlabel="* ", tooltip="Diagnosis *  -- *  Examination

An Examination has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Examinations. It can have none, and there is no upper bound defined.

" headtooltip="Diagnosis *  -- *  Examination

An Examination has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Examinations. It can have none, and there is no upper bound defined.

" tailtooltip="Diagnosis *  -- *  Examination

An Examination has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Examinations. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Diagnosis" -> "Prescription" [dir="none", taillabel="* ", headlabel="* ", tooltip="Diagnosis *  -- *  Prescription

A Prescription has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Prescriptions. It can have none, and there is no upper bound defined.

" headtooltip="Diagnosis *  -- *  Prescription

A Prescription has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Prescriptions. It can have none, and there is no upper bound defined.

" tailtooltip="Diagnosis *  -- *  Prescription

A Prescription has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Prescriptions. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Diagnosis" -> "Treatment" [dir="none", taillabel="* ", headlabel="* ", tooltip="Diagnosis *  -- *  Treatment

A Treatment has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Treatments. It can have none, and there is no upper bound defined.

" headtooltip="Diagnosis *  -- *  Treatment

A Treatment has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Treatments. It can have none, and there is no upper bound defined.

" tailtooltip="Diagnosis *  -- *  Treatment

A Treatment has some Diagnosiss. It can have none, and there is no upper bound defined.

A Diagnosis has some Treatments. It can have none, and there is no upper bound defined.

" tailurl="javascript:void()" headurl="javascript:void()" ];
  "Prescription" -> "Therapy" [dir="none", taillabel="1 ", headlabel="* ", tooltip="Prescription 1  -- *  Therapy

A Therapy called therapies has A Prescription. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Prescription.

A Prescription has some Therapys called therapies. It can have none, and there is no upper bound defined.

When a Therapy is created, its Prescription must be assigned.
When a Therapy is deleted, its Prescription is not deleted and its list of Therapys is decreased.
When a Prescription is deleted, its Therapys are not deleted. They are assigned to another Prescription.
" headtooltip="Prescription 1  -- *  Therapy

A Therapy called therapies has A Prescription. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Prescription.

A Prescription has some Therapys called therapies. It can have none, and there is no upper bound defined.

When a Therapy is created, its Prescription must be assigned.
When a Therapy is deleted, its Prescription is not deleted and its list of Therapys is decreased.
When a Prescription is deleted, its Therapys are not deleted. They are assigned to another Prescription.
" tailtooltip="Prescription 1  -- *  Therapy

A Therapy called therapies has A Prescription. It must always have exactly, one, and can never have none. And there is an upper bound of at most one Prescription.

A Prescription has some Therapys called therapies. It can have none, and there is no upper bound defined.

When a Therapy is created, its Prescription must be assigned.
When a Therapy is deleted, its Prescription is not deleted and its list of Therapys is decreased.
When a Prescription is deleted, its Therapys are not deleted. They are assigned to another Prescription.
" tailurl="javascript:void()" headurl="javascript:void()" ];
}
